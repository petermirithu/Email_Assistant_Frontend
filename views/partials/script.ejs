<script src="https://code.jquery.com/jquery-3.7.1.min.js"
    integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
    crossorigin="anonymous"></script>
<script src="/socket.io/socket.io.js"></script>
<script>
    socket = io();

    socket.on('mail_box_total', (value) => {
        const item = document.getElementById("totalEmails");
        item.innerHTML = value;
    });

    socket.on('show_error', (value) => {
        alert(value);
    });

    socket.on('mail_connection_status', (value) => {
        const item = document.getElementById("mailConnectionStatus");
        item.classList.remove("bg-success");
        item.classList.remove("bg-info");
        item.classList.remove("bg-danger");
        if (value == "connected") {
            item.classList.add("bg-success");
            item.innerHTML = "Connected to Mail";
        }
        else if (value == "connecting") {
            item.classList.add("bg-info");
            item.innerHTML = "Connecting to Mail ...";
        }
        else {
            item.classList.add("bg-danger");
            item.innerHTML = "Disconnected from Mail";
        }
    });

    socket.on('display_mails_tasks', (value) => {
        const inboxMails = document.getElementById("inboxMails");
        const taskList = document.getElementById("taskList");

        inboxMails.innerHTML = null;
        taskList.innerHTML = null;

        if (value?.emails?.length > 0) {
            const unReadEmails = document.getElementById("unReadEmails");
            unReadEmails.innerHTML = value.emails.filter(x => x.read == false).length;

            const processedMails = document.getElementById("processedMails");
            processedMails.innerHTML = value.emails.length;

            for (let email of value?.emails) {
                const card = `<div class="cardX" onclick="goToEmailDetailsSection('${email.id}')">
                                <div class="mailAvatar bg-info">
                                    <span class="text">${email.initials}</span>
                                </div>
                                <div class="mailBody">
                                    <p class="time">${email.timeAgo}</p>
                                    <p class="subject">${email.subject}</p>
                                    <p class="from">From: ${email.from_email}</p>
                                </div>
                            </div>`
                inboxMails.innerHTML += card
            }
        }
        else {
            inboxMails.innerText = "No have no mails which have been processed";
        }


        const progressBar = document.getElementById("progressBar");

        if (value?.tasks?.length == 0) {
            taskList.innerText = "You have no pending tasks";
            progressBar.style.width = "0%"
        }
        else {
            const totalTasks = value.tasks.length;
            const doneTasks = value.tasks.filter(x => x.done == true).length;

            progressBar.style.width = `${Math.floor((doneTasks / totalTasks) * 100)}%`;

            for (let task of value?.tasks) {
                let badge = null;

                if (task.category.toLowerCase() == "urgent") {
                    badge = `<span class="badge rounded-pill bg-red">${task.category}</span>`
                }
                else if (task.category.toLowerCase() == "deadline") {
                    badge = `<span class="badge rounded-pill bg-danger">${task.category}</span>`
                }
                else if (task.category.toLowerCase() == "critical") {
                    badge = `<span class="badge rounded-pill bg-purple">${task.category}</span>`
                }
                else if (task.category.toLowerCase() == "reminder") {
                    badge = `<span class="badge rounded-pill bg-orange">${task.category}</span>`
                }
                else {
                    badge = `<span class="badge rounded-pill bg-warning">${task.category}</span>`
                }

                const card = `<div class="taskCard bg-light">
                <div class="form-check">
                  <p class="timeAgo">${task.timeAgo}</p>
                  <input class="form-check-input bg-success}" type="checkbox" id="flexCheckDefault" ${(task.done == true ? 'checked' : '')}>                
                  <label class="form-check-label">
                    ${badge} ${task.title}
                  </label>
                </div>                
              </div>`
                taskList.innerHTML += card
            }
        }
    });

    socket.on('display_mail_task', (value) => {
        const emailDetailId = document.getElementById("emailDetailId");        
        emailDetailId.innerHTML = value.email.id;

        const emailDetailMessageId = document.getElementById("emailDetailMessageId");        
        emailDetailMessageId.innerHTML = value.email.message_id;        

        const emailDetailTitle = document.getElementById("emailDetailTitle");        
        emailDetailTitle.innerHTML = value.email.subject;

        const emailDetailFrom = document.getElementById("emailDetailFrom");        
        emailDetailFrom.innerHTML = value.email.from_email.replace("<",":- ").replace(">","");

        const emailDetailBody = document.getElementById("emailDetailBody");        
        emailDetailBody.innerHTML = value.email.body;

        const emailDetailTasks = document.getElementById("emailDetailTasks");        
        emailDetailTasks.innerHTML = null;        

        for (let task of value?.tasks) {
            const li = `<li>${task.category} - ${task.title}</li>`;
            emailDetailTasks.innerHTML += li;
        }
    });

    socket.on('display_reply_suggestion', (value) => {        
        const replyMailModalLabel = document.getElementById("replyMailModalLabel");        
        replyMailModalLabel.innerHTML = "Reply Suggestion";

        const emailBodyText = document.getElementById("emailBodyText");        
        emailBodyText.value = value;

        const emailDetailFrom = document.getElementById("emailDetailFrom");
        const emailReplyTo = document.getElementById("emailReplyTo");
        emailReplyTo.value = emailDetailFrom.innerHTML.split(":- ")[1];
    });    

    socket.on('display_mail_summary', (value) => {      
        const mailSummarySection = document.getElementById("mailSummarySection");        
        mailSummarySection.innerHTML = value;        
    });    
</script>